@model Sistema.Models.ContasContabeis

@using Sistema.Util
@{
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string action = Convert.ToString(ViewBag.Action);
}

@if (action != "create")
{
    @Html.HiddenFor(model => model.codigo)
    <div class="form-row">
        <div class="@Util.Input2">
            @Html.LabelFor(model => model.codigo)
            @Html.TextBoxFor(model => model.codigo, new { @class = "form-control", disabled = false })
        </div>
    </div>
}

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.situacao, new { @class = "required" })
        @Html.DropDownListFor(model => model.situacao, Sistema.Models.ContasContabeis.Situacao, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.situacao, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input12">
        @Html.LabelFor(model => model.nomeConta, new { @class = "required" })
        @Html.TextBoxFor(model => model.nomeConta, new { @class = "form-control", maxlength = "50", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.nomeConta, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.classificacao)
        @Html.TextBoxFor(model => model.classificacao, new { @class = "form-control", style = "text-transform:uppercase", maxlength = "10" })
        @Html.ValidationMessageFor(model => model.classificacao, null, new { @class = "text-danger" })
    </div>
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.vlSaldo, new { @class = "required" })
        @Html.TextBoxFor(model => model.vlSaldo, new { @class = "form-control", placeholder = "0,00", style = "text-align: right", disabled = true })
    </div>
</div>

@if (action != "create")
{
    <div class="form-row">
        <div class="@Util.Input3">
            @Html.LabelFor(model => model.dtCadastro)
            <div class="input-group-append">
                @Html.HiddenFor(model => model.dtCadastro)
                @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control datepicker date", disabled = true })
                <span class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></span>
            </div>
        </div>

        <div class="@Util.Input3 ">
            @Html.LabelFor(model => model.dtUltAlteracao)
            <div class="input-group">
                @Html.HiddenFor(model => model.dtUltAlteracao)
                @Html.TextBoxFor(model => model.dtUltAlteracao, new { @class = "form-control datepicker date", disabled = true })
                <div class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></div>
            </div>
        </div>
    </div>
}


@if (action == "details")
{
    <div class="bs-callout bs-callout-primary">
        <h4> Histórico de lançamentos</h4>
        @Html.HiddenFor(model => model.jsLancamentos)
        <table id="tblLancamentos" class="table table-striped table-bordered" style="width:100%">
            <thead>
                <tr>
                    <th width="10%" style="text-align:right">Nº</th>
                    <th width="10%">Data</th>
                    <th width="10%" style="text-align:right">Valor</th>
                    <th width="70%">Descrição</th>
                </tr>
            </thead>
        </table>
    </div>
}