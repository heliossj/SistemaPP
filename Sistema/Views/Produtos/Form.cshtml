@model Sistema.Models.Produtos
@using Sistema.Util
@{
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string action = Convert.ToString(ViewBag.Action);
}

@if (action != "create")
{
    @Html.HiddenFor(model => model.codigo)
    <div class="form-row">
        <div class="@Util.Input2">
            @Html.LabelFor(model => model.codigo)
            @Html.TextBoxFor(model => model.codigo, new { @class = "form-control", disabled = false })
        </div>
    </div>
}

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.situacao, new { @class = "required" })
        @Html.DropDownListFor(model => model.situacao, Sistema.Models.Produtos.Situacao, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.situacao, null, new { @class = "text-danger" })
    </div>
</div>


<div class="form-row">
    <div class="@Util.Input8">
        @Html.LabelFor(model => model.nomeProduto, new { @class = "required" })
        @Html.TextBoxFor(model => model.nomeProduto, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.nomeProduto, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input2">
        @Html.LabelFor(model => model.unidade, new { @class = "required" })
        @Html.DropDownListFor(model => model.situacao, Sistema.Models.Produtos.Unidade, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.unidade, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input2">
        @Html.LabelFor(model => model.largura, new { @class = "required" })
        @Html.DropDownListFor(model => model.largura, Sistema.Models.Produtos.Largura, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.largura, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    @Html.EditorFor(model => model.Grupo, "Grupos/Select", new { Required = false, Disabled = false })
</div>

<div class="form-row">
    @Html.EditorFor(model => model.Fornecedor, "Fornecedores/Select", new { Required = false, Disabled = false })
</div>

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.ncm, new { @class = "required" })
        @Html.TextBoxFor(model => model.ncm, new { @class = "form-control", maxlength = "10", style = "text-transform:uppercase", minlength = "3" })
        @Html.ValidationMessageFor(model => model.ncm, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.qtEstoque)
        @Html.TextBoxFor(model => model.qtEstoque, new { @class = "form-control money", maxlength = "10", style = "text-transform:uppercase", minlength = "3", disabled = true })
        @Html.ValidationMessageFor(model => model.qtEstoque, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.vlCusto, new { @class = "required" })
        @Html.TextBoxFor(model => model.vlCusto, new { @class = "form-control money", placeholder = "0,00" })
        @Html.ValidationMessageFor(model => model.vlCusto, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.vlUltCompra)
        @Html.TextBoxFor(model => model.vlUltCompra, new { @class = "form-control money", type = "number", min = "0.01", step = ".01", placeholder = "0,00", oninput = "this.value = Math.abs(this.value)", disabled = true })
        @Html.ValidationMessageFor(model => model.vlUltCompra, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.vlVenda, new { @class = "required" })
        @Html.TextBoxFor(model => model.vlVenda, new { @class = "form-control money", placeholder = "0,00" })
        @Html.ValidationMessageFor(model => model.vlVenda, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input12">
        @Html.LabelFor(model => model.observacao)
        @Html.TextAreaFor(model => model.observacao, new { @class = "form-control" })
    </div>
</div>

@if (action != "create")
{
    <div class="form-row">
        <div class="@Util.Input3">
            @Html.LabelFor(model => model.dtCadastro)
            <div class="input-group-append">
                @Html.HiddenFor(model => model.dtCadastro)
                @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control datepicker date", disabled = true })
                <span class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></span>
            </div>
        </div>

        <div class="@Util.Input3 ">
            @Html.LabelFor(model => model.dtUltAlteracao)
            <div class="input-group">
                @Html.HiddenFor(model => model.dtUltAlteracao)
                @Html.TextBoxFor(model => model.dtUltAlteracao, new { @class = "form-control datepicker date", disabled = true })
                <div class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></div>
            </div>
        </div>
    </div>
}