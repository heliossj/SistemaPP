@model Sistema.Models.CondicaoPagamento
@using Sistema.Util
@{
    bool readOnly = Convert.ToBoolean(ViewBag.ReadOnly);
    string action = Convert.ToString(ViewBag.Action);
}

@if (action != "create")
{
    @Html.HiddenFor(model => model.codigo)
    <div class="form-row">
        <div class="@Util.Input2">
            @Html.LabelFor(model => model.codigo)
            @Html.TextBoxFor(model => model.codigo, new { @class = "form-control", disabled = false })
        </div>
    </div>
}

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.situacao)
        @Html.DropDownListFor(model => model.situacao, Sistema.Models.CondicaoPagamento.Situacao, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.situacao, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input12">
        @Html.LabelFor(model => model.nomeCondicao, new { @class = "required" })
        @Html.TextBoxFor(model => model.nomeCondicao, new { @class = "form-control", maxlength = "100", style = "text-transform:uppercase" })
        @Html.ValidationMessageFor(model => model.nomeCondicao, null, new { @class = "text-danger" })
    </div>
</div>

<div class="form-row">
    <div class="@Util.Input3">
        @Html.LabelFor(model => model.txJuros, new { @class = "required" })
        @Html.TextBoxFor(model => model.txJuros, new { @class = "form-control money", placeholder = "0,00", style = "text-align: right" })
        @Html.ValidationMessageFor(model => model.txJuros, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.multa, new { @class = "required" })
        @Html.TextBoxFor(model => model.multa, new { @class = "form-control money", placeholder = "0,00", style = "text-align: right" })
        @Html.ValidationMessageFor(model => model.multa, null, new { @class = "text-danger" })
    </div>

    <div class="@Util.Input3">
        @Html.LabelFor(model => model.desconto, new { @class = "required" })
        @Html.TextBoxFor(model => model.desconto, new { @class = "form-control money", placeholder = "0,00", style = "text-align: right" })
        @Html.ValidationMessageFor(model => model.desconto, null, new { @class = "text-danger" })
    </div>
</div>


<div class="bs-callout bs-callout-primary">

    @if (action == "create" || action == "edit")
    {
        <div class="form-row">
            @Html.EditorFor(model => model.FormaPagamento, "FormaPagamento/Select", new { Disabled = false, Required = false })
        </div>

        <div class="form-row">
            <div class="@Util.Input3">
                @Html.LabelFor(model => model.qtDias, new { @class = "required" })
                <div id="divDias">
                    @Html.TextBoxFor(model => model.qtDias, new { @class = "form-control number", @maxLength = "6", style = "text-align: right" })
                </div>
                @Html.ValidationMessageFor(model => model.qtDias, null, new { @class = "text-danger" })
            </div>

            <div class="@Util.Input3">
                @Html.LabelFor(model => model.txPercentual, new { @class = "required" })
                @Html.TextBoxFor(model => model.txPercentual, new { @class = "form-control money", placeholder = "0,00", style = "text-align: right" })
                @Html.ValidationMessageFor(model => model.txPercentual, null, new { @class = "text-danger" })
            </div>

            <div>
                <button id="addCondPagamento" type="button" class="btn btn-success btn-lg" style="margin-top:35px; font-size:14px" title="Adicionar"><i class="fa fa-plus"></i></button>
            </div>

            <div class="@Util.Input3">
                @Html.HiddenFor(model => model.txPercentualTotalAux)
                @Html.LabelFor(model => model.txPercentualTotal, new { @class = "no-required" })
                @Html.TextBoxFor(model => model.txPercentualTotal, new { @class = "form-control money", disabled = false, style = "text-align: right" })
                @Html.ValidationMessageFor(model => model.txPercentualTotal, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    @Html.HiddenFor(model => model.jsItens)
    <table id="tblCondicao" class="table table-striped table-bordered" style="width:100%">
        <thead>
            <tr>
                @if (action == "create" || action == "edit")
                {
                    <th>
                        <a class="btn btn-danger btn-sm" id="removeAll" title="Remover parcelas"><i class="fa fa-times"></i> </a>
                    </th>
                }
                <th width="5%">Nº</th>
                <th width="5%">Dias</th>
                <th width="5%">Percentual</th>
                <th width="85%">Forma de pagamento</th>
            </tr>
        </thead>
    </table>
    @Html.ValidationMessageFor(model => model.ListCondicao, null, new { @class = "text-danger" })
</div>

@if (action != "create")
{
    <div class="form-row">
        <div class="@Util.Input3">
            @Html.LabelFor(model => model.dtCadastro)
            <div class="input-group-append">
                @Html.HiddenFor(model => model.dtCadastro)
                @Html.TextBoxFor(model => model.dtCadastro, new { @class = "form-control datepicker date", disabled = true })
                <span class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></span>
            </div>
        </div>

        <div class="@Util.Input3 ">
            @Html.LabelFor(model => model.dtUltAlteracao)
            <div class="input-group">
                @Html.HiddenFor(model => model.dtUltAlteracao)
                @Html.TextBoxFor(model => model.dtUltAlteracao, new { @class = "form-control datepicker date", disabled = true })
                <div class="input-group-addon input-group-text"><i class="fa fa-calendar"></i></div>
            </div>
        </div>
    </div>
}
